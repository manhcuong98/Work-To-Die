[{"D:\\Work-To-Die\\Front_end\\employers\\src\\index.js":"1","D:\\Work-To-Die\\Front_end\\employers\\src\\reportWebVitals.js":"2","D:\\Work-To-Die\\Front_end\\employers\\src\\App.js":"3","D:\\Work-To-Die\\Front_end\\employers\\src\\components\\Employers\\UpLoadNewJob.js":"4","D:\\Work-To-Die\\Front_end\\employers\\src\\components\\Employers\\seeApply.js":"5","D:\\Work-To-Die\\Front_end\\employers\\src\\components\\Employers\\applyTag.js":"6","D:\\Work-To-Die\\Front_end\\employers\\src\\utils\\axios.js":"7","D:\\Work-To-Die\\Front_end\\employers\\src\\share\\LoadingIndicator.js":"8"},{"size":541,"mtime":1607943068883,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":2319,"mtime":1607942864042,"results":"12","hashOfConfig":"10"},{"size":5627,"mtime":1607959016577,"results":"13","hashOfConfig":"10"},{"size":1348,"mtime":1607942546500,"results":"14","hashOfConfig":"10"},{"size":812,"mtime":1607942668348,"results":"15","hashOfConfig":"10"},{"size":266,"mtime":1607940811758,"results":"16","hashOfConfig":"10"},{"size":660,"mtime":1607942445765,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ziemzg",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\Work-To-Die\\Front_end\\employers\\src\\index.js",[],["39","40"],"D:\\Work-To-Die\\Front_end\\employers\\src\\reportWebVitals.js",[],"D:\\Work-To-Die\\Front_end\\employers\\src\\App.js",["41","42","43","44","45","46","47"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport {\n  Nav,\n  Navbar,\n  Container,\n  Row,\n  Col,\n  Button,\n  NavbarBrand,\n  NavDropdown,\n} from \"react-bootstrap\";\nimport { Route, useHistory, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { faArrowRight, faPowerOff } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { SeeApply } from \"./components/Employers/seeApply\";\nimport { UpLoadNewJob } from \"./components/Employers/UpLoadNewJob\";\n\nfunction App() {\n  const handleClick = () => {};\n  return (\n    <div className=\"App\">\n      <Navbar\n        expand=\"lg\"\n        style={{\n          backgroundColor: \"#ffffff\",\n          borderBottom: \"1px solid #333333\",\n        }}\n      >\n        <Container>\n          <Navbar.Brand>\n            <img\n              src=\"/find_jobs.png\"\n              width=\"200\"\n              height=\"50\"\n              className=\"d-inline-block align-top\"\n              alt=\"React Bootstrap logo\"\n            />\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link as={Link} to=\"/upload-job\" className=\"mx-1\">\n                Upload new job\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/apply-job\" className=\"mx-1\">\n                Candidate Job Applications\n              </Nav.Link>\n            </Nav>\n            <Nav className=\"ml-auto\">\n              <Nav.Link as={Link} to=\"/auth/sign-up\" className=\"mx-1\">\n                SIGN UP\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/auth/sign-in\" className=\"mx-1\">\n                SIGN IN\n              </Nav.Link>\n            </Nav>\n            <Nav>\n              <Button onClick={handleClick}>\n                FOR EMPLOYERS\n                <FontAwesomeIcon\n                  icon={faArrowRight}\n                  style={{ marginLeft: \"10px\" }}\n                />\n              </Button>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <>\n        <Route path=\"/apply-job\" component={SeeApply} />\n        <Route path=\"/upload-job\" component={UpLoadNewJob} />\n      </>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Work-To-Die\\Front_end\\employers\\src\\components\\Employers\\UpLoadNewJob.js",[],"D:\\Work-To-Die\\Front_end\\employers\\src\\components\\Employers\\seeApply.js",["48"],"import React , {useEffect, useState} from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axiosInstance from \"../../utils/axios\"\r\nimport { LoadingSign } from \"../../share/LoadingIndicator\"\r\nimport { ApplyTag } from \"./applyTag\"\r\n\r\n\r\nexport const SeeApply = () => {\r\n\r\n    const companyName = \"Creatory Vietnam\"\r\n    const [listEmail , setListEmail] = useState([])\r\n    \r\n    const getData = () => {\r\n        let a = []\r\n        for(let i=0 ; i<listEmail.length ; i++ ) {\r\n            if(i==2) {\r\n                a[i] = <ApplyTag email = \"mt766157@gmail.com\" job = {listEmail[i].job} />\r\n                continue;\r\n            }\r\n            a[i] = <ApplyTag email = {listEmail[i].email} job = {listEmail[i].job} />        \r\n        }\r\n        return a;   \r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"alo\")\r\n        axiosInstance.get(`/getApply?companyName=${companyName}`).then((res) => {\r\n        \r\n            console.log(res.data.emailApply)\r\n            setListEmail(res.data.emailApply)\r\n        })\r\n    } , [])\r\n\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center', marginBottom: 100, marginTop: 50 }}>\r\n            <div style = {{fontSize: 25 , fontWeight: 'bold'}}>List apply</div>\r\n\r\n            {listEmail.length === 0 ? <LoadingSign text=\"Loading\" /> : getData()} \r\n            \r\n        </div>\r\n    )\r\n}","D:\\Work-To-Die\\Front_end\\employers\\src\\components\\Employers\\applyTag.js",["49","50","51"],"import React , {useContext} from 'react'\r\nimport { Route, useHistory } from \"react-router-dom\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import resumeMailContext from \"../../context/resumeMail\"\r\n\r\n\r\nexport const ApplyTag = (props) => {\r\n    // const { resumeMail, setResumeMail } = useContext(resumeMailContext)\r\n    const {email , job} = props\r\n    const history = useHistory()\r\n\r\n    const gotoProfile = () => {\r\n        // setResumeMail(email)\r\n        history.push(\"/profile\")\r\n    }\r\n\r\n    return (\r\n        <div style = {{marginTop: 40}}>\r\n           <span style = {{fontWeight : \"bold\"}}>{email}</span>  has applied to your work: <span style = {{fontWeight : \"bold\"}}>{job}</span> , want to see his/her <a onClick = {gotoProfile} className = \"here\">profile</a>\r\n        </div>\r\n       \r\n    )\r\n}","D:\\Work-To-Die\\Front_end\\employers\\src\\utils\\axios.js",[],["52","53"],"D:\\Work-To-Die\\Front_end\\employers\\src\\share\\LoadingIndicator.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":7,"column":3,"nodeType":"60","messageId":"61","endLine":7,"endColumn":6},{"ruleId":"58","severity":1,"message":"63","line":8,"column":3,"nodeType":"60","messageId":"61","endLine":8,"endColumn":6},{"ruleId":"58","severity":1,"message":"64","line":10,"column":3,"nodeType":"60","messageId":"61","endLine":10,"endColumn":14},{"ruleId":"58","severity":1,"message":"65","line":11,"column":3,"nodeType":"60","messageId":"61","endLine":11,"endColumn":14},{"ruleId":"58","severity":1,"message":"66","line":13,"column":17,"nodeType":"60","messageId":"61","endLine":13,"endColumn":27},{"ruleId":"58","severity":1,"message":"67","line":15,"column":24,"nodeType":"60","messageId":"61","endLine":15,"endColumn":34},{"ruleId":"68","severity":1,"message":"69","line":16,"column":17,"nodeType":"70","messageId":"71","endLine":16,"endColumn":19},{"ruleId":"58","severity":1,"message":"72","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":27},{"ruleId":"58","severity":1,"message":"73","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":19,"column":165,"nodeType":"76","endLine":19,"endColumn":211},{"ruleId":"54","replacedBy":"77"},{"ruleId":"56","replacedBy":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'NavbarBrand' is defined but never used.","'NavDropdown' is defined but never used.","'useHistory' is defined but never used.","'faPowerOff' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'Route' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["79"],["80"],"no-global-assign","no-unsafe-negation"]