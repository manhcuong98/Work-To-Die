[{"F:\\Work-To-Die\\Front_end\\employers\\src\\index.js":"1","F:\\Work-To-Die\\Front_end\\employers\\src\\reportWebVitals.js":"2","F:\\Work-To-Die\\Front_end\\employers\\src\\App.js":"3","F:\\Work-To-Die\\Front_end\\employers\\src\\components\\Employers\\UpLoadNewJob.js":"4","F:\\Work-To-Die\\Front_end\\employers\\src\\components\\Employers\\seeApply.js":"5","F:\\Work-To-Die\\Front_end\\employers\\src\\components\\Employers\\applyTag.js":"6","F:\\Work-To-Die\\Front_end\\employers\\src\\utils\\axios.js":"7","F:\\Work-To-Die\\Front_end\\employers\\src\\share\\LoadingIndicator.js":"8","F:\\Work-To-Die\\Front_end\\employers\\src\\components\\auth\\index.js":"9","F:\\Work-To-Die\\Front_end\\employers\\src\\components\\auth\\SignIn.js":"10","F:\\Work-To-Die\\Front_end\\employers\\src\\components\\auth\\SignUp.js":"11","F:\\Work-To-Die\\Front_end\\employers\\src\\components\\context\\auth.js":"12"},{"size":559,"mtime":1607952545067,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1607952545068,"results":"15","hashOfConfig":"14"},{"size":6728,"mtime":1608028808951,"results":"16","hashOfConfig":"14"},{"size":6015,"mtime":1608024719885,"results":"17","hashOfConfig":"14"},{"size":1348,"mtime":1607952545035,"results":"18","hashOfConfig":"14"},{"size":812,"mtime":1607952545035,"results":"19","hashOfConfig":"14"},{"size":266,"mtime":1607952545095,"results":"20","hashOfConfig":"14"},{"size":660,"mtime":1607952545068,"results":"21","hashOfConfig":"14"},{"size":772,"mtime":1608026954572,"results":"22","hashOfConfig":"14"},{"size":2967,"mtime":1608026975522,"results":"23","hashOfConfig":"14"},{"size":6240,"mtime":1608027001858,"results":"24","hashOfConfig":"14"},{"size":152,"mtime":1607957601517,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"a268gh",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"F:\\Work-To-Die\\Front_end\\employers\\src\\index.js",[],["55","56"],"F:\\Work-To-Die\\Front_end\\employers\\src\\reportWebVitals.js",[],"F:\\Work-To-Die\\Front_end\\employers\\src\\App.js",["57","58","59","60","61","62"],"F:\\Work-To-Die\\Front_end\\employers\\src\\components\\Employers\\UpLoadNewJob.js",["63","64","65"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Container, Form, Row } from \"react-bootstrap\";\r\nimport \"../../css/companyInfo.css\";\r\nimport axiosInstance from \"../../utils/axios\";\r\nimport { LoadingIndicator } from \"../../share/LoadingIndicator\";\r\nimport authContext from \"../context/auth\"\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const UpLoadNewJob = () => {\r\n  const history = useHistory()\r\n  const {authUser, setAuthUser} = useContext(authContext)\r\n  console.log(authUser);\r\n  useEffect(()=>{\r\n    if(!authUser){\r\n      history.push(\"/\")\r\n    }\r\n  },[])\r\n  const convertDate = (inputFormat) => {\r\n    function pad(s) {\r\n      return s < 10 ? \"0\" + s : s;\r\n    }\r\n    var d = new Date(inputFormat);\r\n    return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join(\"/\");\r\n  };\r\n\r\n  \r\n \r\n  const [values, setValues] = useState({\r\n    companyName: authUser ? authUser.companyName : \"\",\r\n    job: \"\",\r\n    type: \"\",\r\n    field: \"\",\r\n    salary: \"\",\r\n    timePost: convertDate(new Date()),\r\n    requirement: \"\",\r\n    experience: \"\",\r\n  });\r\n\r\n  const [success, setSuccess] = useState(false);\r\n  const [info, setInfo] = useState();\r\n\r\n  useEffect(() => {\r\n    axiosInstance.get(`/companies/info?name=${authUser ? authUser.companyName : \"\"}`).then((res) => {\r\n      console.log(res);\r\n      setInfo(res.data[0]);\r\n    });\r\n  }, [success]);\r\n\r\n  const handelChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    setSuccess(false);\r\n    event.preventDefault();\r\n    const newJob = {\r\n      companyName: authUser.companyName,\r\n      job: values.job,\r\n      type: values.type,\r\n      field: values.field,\r\n      salary: parseInt(values.salary),\r\n      timePost: convertDate(new Date()),\r\n      requirement: values.requirement,\r\n      experience: values.experience,\r\n    };\r\n    console.log(newJob);\r\n    axiosInstance.post(\"/employers/new-job\", newJob).then((res) => {\r\n      console.log(res);\r\n      setValues({\r\n        companyName: authUser.companyName,\r\n        job: \"\",\r\n        type: \"\",\r\n        field: \"\",\r\n        salary: \"\",\r\n        timePost: convertDate(new Date()),\r\n        requirement: \"\",\r\n        experience: \"\",\r\n      });\r\n      setSuccess(true);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    {authUser ? \r\n    <Container>\r\n      <Row className=\"mt-3\" style={{ textAlign: \"left\" }}>\r\n        <div className=\"col-8\">\r\n          <div className=\"card-deco\">\r\n            <div className=\"card-title\">Upload a new job</div>\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group>\r\n                <Form.Label>Job</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  value={values.job}\r\n                  name=\"job\"\r\n                  onChange={handelChange}\r\n                  placeholder=\"Enter job\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Field</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  value={values.field}\r\n                  name=\"field\"\r\n                  onChange={handelChange}\r\n                  placeholder=\"Enter field\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Salary</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"number\"\r\n                  value={values.salary}\r\n                  name=\"salary\"\r\n                  onChange={handelChange}\r\n                  placeholder=\"Enter salary($)\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                <Form.Label>Type</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  as=\"select\"\r\n                  value={values.type}\r\n                  name=\"type\"\r\n                  onChange={handelChange}\r\n                >\r\n                  <option value=\"Part-time\">Part-time</option>\r\n                  <option value=\"Full-time\">Full-time</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Experience</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  type=\"text\"\r\n                  value={values.experience}\r\n                  name=\"experience\"\r\n                  onChange={handelChange}\r\n                  placeholder=\"Enter experience\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>Requirement</Form.Label>\r\n                <Form.Control\r\n                  required\r\n                  as=\"textarea\"\r\n                  value={values.requirement}\r\n                  name=\"requirement\"\r\n                  onChange={handelChange}\r\n                  rows={3}\r\n                />\r\n              </Form.Group>\r\n              <button type=\"submit\">Upload</button>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <div className=\"card-deco\">\r\n            <div className=\"card-title\">Uploaded jobs</div>\r\n            {!info ? (\r\n              <LoadingIndicator />\r\n            ) : info.jobs.length === 0 ? (\r\n              <div className=\"no-job\">No uploaded job</div>\r\n            ) : (\r\n              <div>\r\n                {info.jobs.map((job) => {\r\n                  return (\r\n                    <div className=\"job\">\r\n                      <div className=\"job-name\">{job.job}</div>\r\n                      <div className=\"des-title\">{job.timePost}</div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Row>\r\n    </Container>\r\n    : <div></div>}\r\n    </div>\r\n  );\r\n};\r\n","F:\\Work-To-Die\\Front_end\\employers\\src\\components\\Employers\\seeApply.js",["66"],"import React , {useEffect, useState} from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axiosInstance from \"../../utils/axios\"\r\nimport { LoadingSign } from \"../../share/LoadingIndicator\"\r\nimport { ApplyTag } from \"./applyTag\"\r\n\r\n\r\nexport const SeeApply = () => {\r\n\r\n    const companyName = \"Creatory Vietnam\"\r\n    const [listEmail , setListEmail] = useState([])\r\n    \r\n    const getData = () => {\r\n        let a = []\r\n        for(let i=0 ; i<listEmail.length ; i++ ) {\r\n            if(i==2) {\r\n                a[i] = <ApplyTag email = \"mt766157@gmail.com\" job = {listEmail[i].job} />\r\n                continue;\r\n            }\r\n            a[i] = <ApplyTag email = {listEmail[i].email} job = {listEmail[i].job} />        \r\n        }\r\n        return a;   \r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"alo\")\r\n        axiosInstance.get(`/getApply?companyName=${companyName}`).then((res) => {\r\n        \r\n            console.log(res.data.emailApply)\r\n            setListEmail(res.data.emailApply)\r\n        })\r\n    } , [])\r\n\r\n\r\n    return (\r\n        <div style={{ textAlign: 'center', marginBottom: 100, marginTop: 50 }}>\r\n            <div style = {{fontSize: 25 , fontWeight: 'bold'}}>List apply</div>\r\n\r\n            {listEmail.length === 0 ? <LoadingSign text=\"Loading\" /> : getData()} \r\n            \r\n        </div>\r\n    )\r\n}","F:\\Work-To-Die\\Front_end\\employers\\src\\components\\Employers\\applyTag.js",["67","68","69"],"import React , {useContext} from 'react'\r\nimport { Route, useHistory } from \"react-router-dom\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import resumeMailContext from \"../../context/resumeMail\"\r\n\r\n\r\nexport const ApplyTag = (props) => {\r\n    // const { resumeMail, setResumeMail } = useContext(resumeMailContext)\r\n    const {email , job} = props\r\n    const history = useHistory()\r\n\r\n    const gotoProfile = () => {\r\n        // setResumeMail(email)\r\n        history.push(\"/profile\")\r\n    }\r\n\r\n    return (\r\n        <div style = {{marginTop: 40}}>\r\n           <span style = {{fontWeight : \"bold\"}}>{email}</span>  has applied to your work: <span style = {{fontWeight : \"bold\"}}>{job}</span> , want to see his/her <a onClick = {gotoProfile} className = \"here\">profile</a>\r\n        </div>\r\n       \r\n    )\r\n}","F:\\Work-To-Die\\Front_end\\employers\\src\\utils\\axios.js",[],"F:\\Work-To-Die\\Front_end\\employers\\src\\share\\LoadingIndicator.js",[],"F:\\Work-To-Die\\Front_end\\employers\\src\\components\\auth\\index.js",[],"F:\\Work-To-Die\\Front_end\\employers\\src\\components\\auth\\SignIn.js",["70"],"import React, { useState, useContext } from \"react\";\r\nimport { Card, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoadingSign } from \"../../share/LoadingIndicator\";\r\nimport axiosInstance from \"../../utils/axios\";\r\nimport authCtx from \"../context/auth\";\r\n\r\nexport const SignIn = () => {\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { authUser, setAuthUser } = useContext(authCtx);\r\n\r\n  const handleChanges = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setErr(false);\r\n    if (!values.email || !values.password) {\r\n      setErr(\"Username & password cannot be empty\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      const res = await axiosInstance.post(\"/employers/sign-in\", values);\r\n      const { jwt, userEm } = res.data;\r\n\r\n      setAuthUser(userEm);\r\n      localStorage.setItem(\"jwt\", jwt);\r\n    } catch (err) {\r\n      setErr(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: \"70vh\" }}>\r\n      <Card className=\"mt-5\">\r\n        <Card.Header>SIGN IN</Card.Header>\r\n        <Card.Body>\r\n          {loading ? (\r\n            <LoadingSign text=\"Signing In...\" />\r\n          ) : (\r\n            <>\r\n              {err ? <Alert variant=\"danger\">{err}</Alert> : null}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group controlId=\"formUsername\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter username ...\"\r\n                    name=\"email\"\r\n                    value={values.email}\r\n                    onChange={handleChanges}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formPassword\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Enter password ...\"\r\n                    name=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChanges}\r\n                  />\r\n                </Form.Group>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  block\r\n                  className=\"rounded-pill\"\r\n                >\r\n                  Sign in\r\n                </Button>\r\n                <p className=\"mt-2 small text-center\">\r\n                  Don't have account?{\" \"}\r\n                  <Link to=\"/sign-up\">Sign up</Link> now\r\n                </p>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","F:\\Work-To-Die\\Front_end\\employers\\src\\components\\auth\\SignUp.js",[],"F:\\Work-To-Die\\Front_end\\employers\\src\\components\\context\\auth.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":8,"column":3,"nodeType":"77","messageId":"78","endLine":8,"endColumn":9},{"ruleId":"75","severity":1,"message":"79","line":9,"column":3,"nodeType":"77","messageId":"78","endLine":9,"endColumn":14},{"ruleId":"75","severity":1,"message":"80","line":15,"column":10,"nodeType":"77","messageId":"78","endLine":15,"endColumn":22},{"ruleId":"75","severity":1,"message":"81","line":25,"column":9,"nodeType":"77","messageId":"78","endLine":25,"endColumn":16},{"ruleId":"75","severity":1,"message":"82","line":53,"column":9,"nodeType":"77","messageId":"78","endLine":53,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":128,"column":15,"nodeType":"85","endLine":128,"endColumn":51},{"ruleId":"75","severity":1,"message":"86","line":11,"column":20,"nodeType":"77","messageId":"78","endLine":11,"endColumn":31},{"ruleId":"87","severity":1,"message":"88","line":17,"column":5,"nodeType":"89","endLine":17,"endColumn":7,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"91","line":47,"column":6,"nodeType":"89","endLine":47,"endColumn":15,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":16,"column":17,"nodeType":"95","messageId":"96","endLine":16,"endColumn":19},{"ruleId":"75","severity":1,"message":"97","line":1,"column":17,"nodeType":"77","messageId":"78","endLine":1,"endColumn":27},{"ruleId":"75","severity":1,"message":"98","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":15},{"ruleId":"99","severity":1,"message":"100","line":19,"column":165,"nodeType":"85","endLine":19,"endColumn":211},{"ruleId":"75","severity":1,"message":"101","line":17,"column":11,"nodeType":"77","messageId":"78","endLine":17,"endColumn":19},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'NavbarBrand' is defined but never used.","'faArrowRight' is defined but never used.","'history' is assigned a value but never used.","'handleClick' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setAuthUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authUser' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["104"],"React Hook useEffect has a missing dependency: 'authUser'. Either include it or remove the dependency array.",["105"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'Route' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'authUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [authUser, history]",{"range":"110","text":"111"},"Update the dependencies array to be: [authUser, success]",{"range":"112","text":"113"},[595,597],"[authUser, history]",[1376,1385],"[authUser, success]"]